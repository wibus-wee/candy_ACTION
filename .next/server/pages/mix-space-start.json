{"pageProps":{"title":"部署文档","subtitle":"Mix-Space部署文档","slug":"mix-space-start","created":"2020-12-06T12:16:52.321Z","modified":"2020-12-06T12:28:31.813Z","content":"\n> 致虚极，守静笃。\n\n## 关于 Mix-Space\n\n仓库：[https://github.com/mx-space](https://github.com/mx-space)\n\n由于有很多人不会部署（其实我也是）于是请教了innei，编写了Mix-Space Docs文档。请仔细的跟着去做。\n\n## ⚠️注意\n\n1. 系统要求：Mac / Linux（本教程使用的是CentOS 7.6.1810）\n2. 配置参考：2核2G\n3. 环境要求：nodejs 14，MongoDB，Redis, Yarn 1.22.5\n\n## 已实现的功能\n\n* [X] 写作\n* [X] 备份\n* [X] 图床\n* [X] 前端 UI\n* [X] 后台与后端同步跟进\n\n## 环境配置\n\n如果嫌麻烦的，可以在终端运行此脚本\n\n> MongoDB & Redis & Nginx 不安装，请前往宝塔 软件商店查找安装\n\n```bash\n# install nodejs 14 + Yarn 1.22.5\n# 不安装 MongoDB & Redis & Nginx\n# 只需复制下面的命令\nwget https://api.iucky.cn/themes/mx-space-1.sh && sh mx-space-1.sh\n```\n\nMongoDB & Redis & Nginx 用宝塔安装，进入软件商店找找\n\n\n## 克隆repo\n\n请注意！必须要保持在同一个目录！\n\n```bash\ncd\nmkdir mx\ncd mx\ngit clone https://github.com/mx-space/kami\ngit clone https://github.com/mx-space/admin\ngit clone https://github.com/mx-space/server\n```\n\n\n## 准备域名\n\n这边建议直接解析三个域名到服务器\n\n这里假设解析的是：\n\n前端： kami.test.cn\n\n中端： admin.test.cn\n\n后端： server.test.cn\n\n> 当然，你不用也是可以的，直接IP访问，但记得宝塔开端口！\n\n## 部署 Server\n\n1. 进入宝塔站点设置，点击配置文件，在`access_log`那行前面加入以下代码：\n\n![https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29上午7.23.58.jpg](https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29%E4%B8%8A%E5%8D%887.23.58.jpg)\n\n```nginx\nlocation /socket.io {\n        proxy_http_version 1.1;\n        proxy_buffering off;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"Upgrade\";\n        proxy_pass http://127.0.0.1:2333/socket.io;\n    }\n```\n\n\n2. 在根目录输入 `cd mx/server`，定位至server文件夹\n   接着我们输入`yarn`进行install\n   输入`cp .env.example .env`，复制.env.example为.env\n3. 输入命令：vim .env ，输入i，进入修改模式，修改内容\n   配置参考在下面👇\n\n### Server .env 配置参考\n\n```.env\nSECRET=ahsdljasdasdhaisASHLDasdassdasdasrwedwqe\nPORT=2333\nCORS=1\nAPP_MAX_MEMORY=150M\nORIGIN=kami.test.cn,admin.test.cn #修改此项为你前端,admin的访问地址，用,分割\n```\n\n4. 之后输入`:wq`退出，运行下面的命令\n\n```bash\nyarn global add pm2\nyarn global add ts-node\nsh ./build.sh\n```\n\n\n5. 我们去到宝塔的站点设置，点击反向代理选项卡，点击添加反向代理\n   `代理名称`自己随便写，`目标URL`填写 **[http://127.0.0.1:2333](http://127.0.0.1:2333/)** ，其他不需要改，保存即可\n   ![https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29上午7.30.53.jpg](https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29%E4%B8%8A%E5%8D%887.30.53.jpg)\n\n## 部署 Admin\n\n1. 在根目录输入以下命令`cd mx/admin/`，\n   输入`yarn`进行install\n2. 输入命令vim .env，输入i，修改内容\n\n\n### Admin .env 配置参考\n\n```.env\nVUE_APP_BASE_API=https://server.test.cn/api/v1/\nVUE_APP_WEB_URL=https://test.cn\nVUE_APP_GATEWAY=https://server.test.cn\n```\n\n\n之后输入`:wq`退出\n\n3. 输入命令vim vue.config.js ，输入i，删除以下的内容\n\n```js\npublicPath:\nprocess . env . NODE_ ENV\n==\nproduction\n? !process. env. VUE_ APP_ PUBLIC_ URL\n? https://cdn. jsdelivr net/ gh/mx-space/ admin@gh-pages \n```\n\n\n4. 之后输入`:wq`退出\n5. 输入命令 `yarn build` 进行构建\n   我们输入`cp -rf dist/* /www/wwwroot/admin.test.cn/`，将构建出来的包移至站点目录（请将admin.test.cn修改为你的admin域名）\n   之后Admin就部署好啦，访问一下admin，初始密码是master\n   具体的使用方法我会在下面一一讲述\n\n## 部署 Kami\n\n1. 在根目录下输入以下命令 cd mx/kami/\n   之后输入`yarn`进行install\n\n输入`cp next.config.withoutsentry.js next.config.js`，复制没有sentry的config\n\n输入`cp .env.example .env`，复制例子\n\n2. 输入命令：vim .env ，输入i，进入修改模式，修改里面的内容\n\n\n### Kami .env 配置参考\n\n```.env\nBASEURL=https://kami.test.cn\nAPIURL=https://server.test.cn/api/v1\nTRACKING_ID= # google analyze's ID\nASSETPREFIX=\nREDIS=1\nGATEWAY_URL=https://server.test.cn\nALWAYS_HTTPS=1\n```\nBASEURL 修改为前端\n\nAPIURL 将前面的server.test.cn修改为你的server端\n\nGATEWAY_URL 修改这里为你的后端（Server）\n\n### 修改Kami配置信息\n\n0. 输入`vim configs.ts`，输入i，进入修改模式，自己修改里面的东西（我做了注释的）\n\n```ts\nimport { faGithub, faQq, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faDotCircle } from '@fortawesome/free-regular-svg-icons'\nimport {\n  faBookOpen,\n  faCircleNotch,\n  faComments,\n  faFeatherAlt,\n  faFlask,\n  faGlasses,\n  faHistory,\n  faMusic,\n  faTv,\n  faUserFriends,\n} from '@fortawesome/free-solid-svg-icons'\nimport { MenuModel, SocialLinkModel } from 'common/store/types'\nconst menu: MenuModel[] = [\n  {\n    title: '源',\n    path: '/',\n    type: 'Home',\n    icon: faDotCircle,\n    subMenu: [],\n  },\n  {\n    title: '文',\n    path: '/posts',\n    type: 'Post',\n    subMenu: [],\n    icon: faGlasses,\n  },\n  {\n    title: '记',\n    type: 'Note',\n    path: '/notes',\n    icon: faFeatherAlt,\n  },\n  {\n    title: '言',\n    path: '/says',\n    icon: faComments,\n  },\n  {\n    title: '览',\n    icon: faHistory,\n    path: '/timeline',\n    subMenu: [\n      {\n        title: '生活',\n        icon: faFeatherAlt,\n        path: '/timeline?type=note',\n      },\n      {\n        title: '博文',\n        icon: faBookOpen,\n        path: '/timeline?type=post',\n      },\n    ],\n  },\n  {\n    title: '友',\n    icon: faUserFriends,\n    path: '/friends',\n  },\n  // {\n  //   title: '趣',\n  //   icon: faCircleNotch,\n  //   path: '/favorite/music',\n  //   subMenu: [\n  //     {\n  //       title: '音乐',\n  //       icon: faMusic,\n  //       type: 'Music',\n  //       path: '/favorite/music',\n  //     },\n  //     {\n  //       title: '追番',\n  //       icon: faTv,\n  //       type: 'Bangumi',\n  //       path: '/favorite/bangumi',\n  //     },\n //      {\n  //       title: '项目',\n  //       icon: faFlask,\n  //       type: 'Project',\n  //       path: '/projects',\n  //     },\n  //   ],\n  // },\n]\nconst social: SocialLinkModel[] = [\n  {\n    url: 'https://github.com/wibus-wee', //GitHub主页Ω\n    title: 'GitHub',\n    icon: faGithub,\n    color: 'var(--black)',\n  },\n  {\n    url: 'https://jq.qq.com/?_wv=1027&k=Z9ovm0he', //QQ链接\n    title: 'QQ',\n    icon: faQq,\n    color: '#12b7f5',\n  },\n  {\n    url: '', //推特主页链接\n    title: 'twitter',\n    icon: faTwitter,\n    color: '#02A4ED',\n  },\n]\nexport default {\n  url: 'https://iucky.cn',\n  alwaysHTTPS:\n    process.env.NODE_ENV === 'development'\n      ? false\n      : process.env.ALWAYS_HTTPS && parseInt(process.env.ALWAYS_HTTPS) === 1,\n  social,\n  biliId: 509616661,\n  homePage: 'https://iucky.cn', // footer link\n  menu,\n  icp: {\n    name: '无备案', //icp备案号\n    url: 'https://iucky.cn/', //icp备案查询网址（我由于没有就乱写了）\n  },\n  travellings: true, // 开往\n  donate: 'https://iucky.cn', //爱发电链接\n}\n```\n\n\n1. 进入mx/kami/public/manifest.json，修改里面的json为自己的内容\n2. 之后再输入`yarn build`进行构建\n3. 构建完毕后，运行`pm2 start ecosystem.config.js`即可～\n4. 我们去到宝塔的站点设置，点击反向代理选项卡，点击添加反向代理\n   `代理名称`自己随便写，`目标URL`填写 **[http://127.0.0.1:2323](http://127.0.0.1:2323/)** ，其他不需要改，保存即可\n   ![https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29上午7.35.41.jpg](https://gitee.com/wibus/blog-assets-goo/raw/master/asset-pic/iMac_2020-11-29%E4%B8%8A%E5%8D%887.35.41.jpg)\n\n## 附加内容\n\n如果发现admin修改了配置后没有生效\n\n输入`redis-cli`，进入redis客户端\n\n输入FLUSHALL，出现OK即可～\n\n\n我们可以安装一下htop观察整个的占用状态\n\n```bash\nyum install htop -y\nhtop\n```\n\n以及运行完后，我们运行pm2 ps命令观察一下是否成功启动\n\n```txt\n┌────┬────────────────────┬──────────┬──────┬───────────┬──────────┬──────────┐\n│ id │ name               │ mode     │ ↺    │ status    │ cpu      │ memory   │\n├────┼────────────────────┼──────────┼──────┼───────────┼──────────┼──────────┤\n│ 1  │ mx-space-graphql   │ cluster  │ 0    │ online    │ 0%       │ 54.6mb   │\n│ 3  │ mx-space-graphql   │ cluster  │ 0    │ online    │ 0%       │ 55.9mb   │\n│ 0  │ mx-space-server    │ cluster  │ 1    │ online    │ 0%       │ 112.0mb  │\n│ 2  │ mx-space-server    │ cluster  │ 4    │ online    │ 0%       │ 109.9mb  │\n│ 4  │ mx-web             │ fork     │ 5631 │ online    │ 0%       │ 40.7mb   │\n│ 5  │ mx-web             │ fork     │ 8828 │ online    │ 0%       │ 1.4mb    │\n└────┴────────────────────┴──────────┴──────┴───────────┴──────────┴──────────┘\n```\n## 使用文档\n\n使用文档：https://iucky.cn/mix-space-use","order":2},"__N_SSG":true}