{"pageProps":{"title":"Typecho博客加入Pjax","slug":"typecho-add-pjax","created":"2020-12-19T03:12:42.384Z","modified":"2020-12-19T03:17:03.586Z","content":"\n## 介绍\n官方介绍：pushState + ajax = pjax 带来最直观的效果是整个网站变成单页应用。这样的效果将会极大的提升用户体验，并且可以减少https的请求的次数和内容。使用github上面的一个开源项目defunkt/jquery-pjax 可以很轻松的帮助我们实现pjax。\n\n> 需要具备基础的html & javascript 知识。如果你连div和script标签仍然不认识，请忽略该篇文章。\n\n## 实现\njs文件引入\n1.引入jquery.min.js,query.pjax.js\n```html\n  <script src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdn.bootcdn.net/ajax/libs/jquery.pjax/2.0.1/jquery.pjax.min.js\"></script>\n```\n\n（或者自己下载这个项目里的js https://github.com/defunkt/jquery-pjax 这个项目里面下载里面的jquery.pjax.js）\n\n### 如何使用\n\n在footer.php里面加上这段代码就初步成功。【继续往下看！尤其是container的介绍】\n```html\n<script>\n$(document).pjax(selector, [container], options) \n</script>\n```\n\n`selector` 给哪些selector绑定pjax事件，一般的为：\"a\", 如果要去掉一些外连的URL， 这里的selector可以为:`\"a[href^='https://iucky.cn']\"`\n\n`[container] `内容变换容器，是指哪个容器里的内容发生的变换，如： '#pjax-content'。就是页面中只刷新的这个部分。\n\n`options` 官方文档提供了更多的选项，以便更好地自定义选项。具体查考官方文档。以下列出我使用的一些选项。\n\n`container` 替换的容器的css选择器。填你的替换容器ID即可。\n\n`timeout` 超时就会被迫页面就会完全刷新，单位毫秒。\n\n`fragment` 这个作为整个pjax框架，必须写上。\n\n所以，代码可以这样写\n\n<script>\n$(document).pjax('a[href^=\"<?php Helper::options()->siteUrl()?>\"]:not(a[target=\"_blank\"], a[no-pjax])', {\n    container: '#pjax-container',\n    fragment: '#pjax-container',\n    timeout: 8000\n})\n</script>\n一定要放在jquery.min.js 和 jquery.pjax.min.js 的后面\n\n解释一下上面代码：`<?php Helper::options()->siteUrl()?>`是typecho的自带函数，调用本站的首页地址！也就是只对本站的，并且没有`_blank`属性的，标签里不含**no-pjax**的链接实行pjax！局部刷新的区域是`#pjax-container`的部分！\n\n其中#pjax-container是你的局部刷新部分，你可能没有这个div，你自己在添加一个`<div id=\"pjax-container\"></div>`包裹住你想局部刷新的部分就行了！\n\n## 加载动画\n\npjax项目还提供了一些pjax事件。以便在pjax执行前后加载一些东西。\n\n加载动画只需要使用这两个事件pjax:send和pjax:complete\n\n如我之前写的：\n\n```html\n<script>\n$(document).on('pjax:send',\nfunction() {\n    $('#loader-wrapper').addClass(\"in\");\n})\n\n$(document).on('pjax:complete',\nfunction() {\n    $('#loader-wrapper').removeClass(\"in\");\n}）\n</script>\n```\n\n解释一下上面代码：就是在pjax执行开始的时候，给#loader-wrapper加上in的样式名称。在pjax结束的时候给给#loader-wrapper去掉in的样式名称，这样就有了加载出现动画，加载后动画消失的效果。\n\n我目前正在开发的主题\"Mix\"使用的加载动画来自这儿：nprogress：http://ricostacruz.com/nprogress/\n\n### 引入nprogress\n\n和引入jquery一样，放在header或者footer，一般是放在jquery的下面的\n\n```html\n<script src=\"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\"></script>\n<link href=\"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\" rel=\"stylesheet\">\n```\n\nnprogress使用起来更简单。在pjax:send的事件里面添加：`NProgress.start();` .在pjax:complete的事件里面添加：`NProgress.done();`\n\n更多使用方法点开链接，看一下github的说明就行！\n\n## 一些问题的解决\n\npjax采用的是异步请求资源，也就是每次请求数据不是重新获取整个页面的数据而是只会获取#pjax-container容器里面的数据。所以如果一个函数在容器外面（如多说加载函数），在A页面没有，B又需要的话，那么从A页面进入B页面，这个函数就不会执行。必须回调这个函数。\n\n注： 不同主题对于#pjax-container选取不一样以及结构可能不同解决方法会有不同（一般是差不多的）\n\n\n### js失效问题\n\n在`pjax:complete`事件 重载相关函数即可。\n\n### 举例\n\n```html\n<script>\n$(document).on('pjax:complete',\nfunction() {\n    GenerateContentList();\n    setupContents();\n    rebindEvents();\n</script>\n```\n所以，最后我的pjax代码就是酱紫的！\n\n```html\n<script>\n//pjax 刷新\n\n$(document).pjax('a[href^=\"<?php Helper::options()->siteUrl()?>\"]:not(a[target=\"_blank\"], a[no-pjax])', {\n    container: '#pjax-container',\n    fragment: '#pjax-container',\n    timeout: 8000\n}).on('pjax:send',\nfunction() {\n    NProgress.start();//加载动画效果开始\n    \n}).on('pjax:complete',\nfunction() {\nNProgress.done();//加载动画效果结束\nimageeffct();//灯箱函数重载\n setupContents();//某个函数重载\nlue();//lue函数重载\nreHighlightCodeBlock();//代码高亮函数重载\n</script>\n```\n\n至此！享受你的pjax无刷新技术吧！"},"__N_SSG":true}