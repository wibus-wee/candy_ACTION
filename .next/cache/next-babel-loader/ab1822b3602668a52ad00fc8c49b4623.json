{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { faBookOpen, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useStore } from 'common/store';\nimport SectionNews from 'components/SectionNews';\nimport configs from 'configs';\nimport { Core } from 'core';\nimport QueueAnim from 'rc-queue-anim';\nimport Texty from 'rc-texty';\nimport React from 'react';\nimport { getAnimationImages } from 'utils';\n\nconst IndexView = props => {\n  var _props$section, _props$section2;\n\n  const {\n    socialStore\n  } = useStore();\n  const {\n    socialLinks\n  } = socialStore;\n  const name = configs.author;\n  return __jsx(\"main\", null, __jsx(\"section\", {\n    className: \"paul-intro\"\n  }, __jsx(\"div\", {\n    className: \"intro-avatar \"\n  }, __jsx(\"img\", {\n    src: configs.avatar,\n    alt: name,\n    style: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"intro-info\"\n  }, __jsx(\"h1\", null, __jsx(Texty, {\n    type: 'mask-bottom',\n    mode: 'smooth'\n  }, name)), __jsx(\"p\", null, __jsx(Texty, {\n    type: 'mask-bottom',\n    mode: 'smooth',\n    delay: 500\n  }, configs.description)), __jsx(QueueAnim, {\n    delay: 500,\n    duration: 500,\n    animConfig: {\n      opacity: [1, 0],\n      translateY: [0, 50]\n    }\n  }, __jsx(\"div\", {\n    className: \"social-icons\",\n    key: 'a'\n  }, socialLinks.map(item => {\n    return __jsx(\"a\", {\n      href: item.url,\n      target: \"_blank\",\n      \"ks-text\": item.title,\n      \"ks-tag\": \"bottom\",\n      key: item.title,\n      style: item.color ? {\n        color: item.color\n      } : {}\n    }, __jsx(FontAwesomeIcon, {\n      icon: item.icon\n    }));\n  }))))), __jsx(\"section\", {\n    className: \"paul-news\",\n    style: {\n      minHeight: '34rem'\n    }\n  }, __jsx(QueueAnim, {\n    className: \"demo-content\",\n    delay: 1200,\n    duration: 500,\n    animConfig: [{\n      opacity: [1, 0],\n      translateY: [0, 50]\n    }, {\n      opacity: [1, 0],\n      translateY: [0, -50]\n    }]\n  }, [// @ts-ignore\n  __jsx(SectionNews, _extends({}, (_props$section = props.section) === null || _props$section === void 0 ? void 0 : _props$section.postSection, {\n    key: 1\n  })), // @ts-ignore\n  __jsx(SectionNews, _extends({}, (_props$section2 = props.section) === null || _props$section2 === void 0 ? void 0 : _props$section2.noteSection, {\n    key: 2\n  }))])));\n};\n\nfunction buildRoute(type, obj) {\n  switch (type) {\n    case 'Post':\n      {\n        const {\n          slug\n        } = obj;\n        return {\n          as: `/posts/${slug}`,\n          href: `/posts/[slug]`\n        };\n      }\n\n    case 'Note':\n      {\n        // @ts-ignore\n        const {\n          nid\n        } = obj;\n        return {\n          as: `/notes/${nid}`,\n          href: `/notes/[id]`\n        };\n      }\n\n    case 'Say':\n      {\n        return {\n          as: `/says`,\n          href: `/says`\n        };\n      }\n  }\n}\n\nexport const getStaticProps = async () => {\n  const images = getAnimationImages();\n  const posts = [...Core.fetcher.articles.values()].sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime());\n  const notes = [...Core.fetcher.notes.values()].sort((a, b) => b.nid - a.nid);\n  const section = {\n    postSection: {\n      title: '最新博文',\n      icon: faBookOpen,\n      moreUrl: 'posts',\n      content: posts.slice(0, 4).map(p => {\n        return _objectSpread({\n          title: p.title,\n          background: images.pop(),\n          _id: p.slug\n        }, buildRoute('Post', p));\n      })\n    },\n    noteSection: {\n      title: '随便写写',\n      icon: faPencilAlt,\n      moreUrl: 'notes',\n      content: notes.slice(0, 4).map(n => {\n        return _objectSpread({\n          title: n.title,\n          background: images.pop(),\n          _id: n.nid\n        }, buildRoute('Note', n));\n      })\n    }\n  };\n  return {\n    props: {\n      section\n    }\n  };\n};\nexport default IndexView;","map":null,"metadata":{},"sourceType":"module"}