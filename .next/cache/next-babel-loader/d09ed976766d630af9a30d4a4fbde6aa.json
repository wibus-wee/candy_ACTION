{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n/*\n * @Author: Innei\n * @Date: 2020-09-02 14:00:52\n * @LastEditTime: 2020-09-05 15:56:38\n * @LastEditors: Innei\n * @FilePath: /candy/common/store/app.ts\n * @Coding with Love\n */\nimport configs from 'configs';\nimport { action, computed, observable } from 'mobx';\nlet AppStore = (_class = (_temp = class AppStore {\n  constructor() {\n    _initializerDefineProperty(this, \"menu\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"viewport\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"position\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"scrollDirection\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"autoToggleColorMode\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"colorMode\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"headerNav\", _descriptor8, this);\n  }\n\n  updatePosition(direction) {\n    if (typeof document !== 'undefined') {\n      this.position = document.documentElement.scrollTop;\n      this.scrollDirection = direction;\n    }\n  }\n\n  get isOverflow() {\n    if (true) {\n      return false;\n    }\n\n    return this.position > window.innerHeight || this.position > screen.height;\n  }\n\n  toggleLoading() {\n    document.body.classList.toggle('loading');\n    this.loading = !this.loading;\n  }\n\n  setLoading(state) {\n    state ? document.body.classList.add('loading') : document.body.classList.remove('loading');\n    this.loading = state;\n  }\n\n  setMenu(menu) {\n    this.menu = menu;\n  }\n\n  setPage(pages) {\n    const homeMenu = this.menu.find(menu => menu.type === 'Home');\n    const models = pages.map(page => {\n      const {\n        title,\n        slug\n      } = page;\n      return {\n        title,\n        path: '/[page]',\n        as: '/' + slug,\n        type: 'Page'\n      };\n    });\n    homeMenu === null || homeMenu === void 0 ? void 0 : homeMenu.subMenu.push(...models);\n  }\n\n  updateViewport() {\n    const innerHeight = window.innerHeight;\n    const width = document.documentElement.getBoundingClientRect().width;\n    const {\n      hpad,\n      pad,\n      mobile\n    } = this.viewport; // 忽略移动端浏览器 上下滚动 导致的视图大小变化\n\n    if (this.viewport.h && // chrome mobile delta == 56\n    Math.abs(innerHeight - this.viewport.h) < 80 && width === this.viewport.w && (hpad || pad || mobile)) {\n      return;\n    }\n\n    this.viewport = {\n      w: width,\n      h: innerHeight,\n      mobile: window.screen.width <= 568 || window.innerWidth <= 568,\n      pad: window.innerWidth <= 768 && window.innerWidth > 568,\n      hpad: window.innerWidth <= 1024 && window.innerWidth > 768,\n      wider: window.innerWidth > 1024 && window.innerWidth < 1920,\n      widest: window.innerWidth >= 1920\n    };\n  }\n\n  get isPadOrMobile() {\n    return this.viewport.pad || this.viewport.mobile;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"menu\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return configs.menu;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"viewport\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"position\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"scrollDirection\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"autoToggleColorMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"colorMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 'light';\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"headerNav\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      title: '',\n      meta: '',\n      show: false\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updatePosition\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updatePosition\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isOverflow\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOverflow\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleLoading\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleLoading\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setLoading\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setLoading\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setMenu\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setMenu\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setPage\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setPage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateViewport\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateViewport\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isPadOrMobile\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isPadOrMobile\"), _class.prototype)), _class);\nexport { AppStore as default };","map":null,"metadata":{},"sourceType":"module"}