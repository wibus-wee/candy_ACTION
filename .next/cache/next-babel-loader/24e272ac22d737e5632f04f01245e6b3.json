{"ast":null,"code":"var _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n/*\n * @Author: Innei\n * @Date: 2020-08-07 16:56:07\n * @LastEditTime: 2020-09-05 10:56:21\n * @LastEditors: Innei\n * @FilePath: /candy/common/store/action.ts\n * @Coding with Love\n */\nimport { observable, action, computed } from 'mobx';\nlet ActionStore = (_class = (_temp = class ActionStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_actions\", _descriptor, this);\n  }\n\n  resetActions() {\n    this._actions = [];\n  }\n  /**\n   * clear and set actions (replace)\n   * @param actions\n   */\n\n\n  setActions(actions) {\n    this.resetActions();\n\n    this._actions.push(...actions);\n  }\n\n  appendActions(actions) {\n    if (Array.isArray(actions)) {\n      this._actions.push(...actions);\n    } else {\n      this._actions.push(actions);\n    }\n  }\n\n  removeAction(action) {\n    const index = this._actions.indexOf(action);\n\n    if (index !== -1) {\n      this._actions.splice(index, 1);\n    }\n  }\n\n  removeActionByIndex(index) {\n    this._actions.splice(index, 1);\n  }\n\n  removeActionByUUID(id) {\n    const index = this._actions.findIndex(i => id.equal(i.id));\n\n    this.removeActionByIndex(index);\n  }\n\n  get actions() {\n    return [...this._actions];\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_actions\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"resetActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"resetActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"appendActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"appendActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeAction\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeAction\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeActionByIndex\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeActionByIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeActionByUUID\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeActionByUUID\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"actions\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"actions\"), _class.prototype)), _class);\nexport { ActionStore as default };","map":null,"metadata":{},"sourceType":"module"}