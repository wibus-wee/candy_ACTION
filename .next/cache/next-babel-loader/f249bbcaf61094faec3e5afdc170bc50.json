{"ast":null,"code":"/*\n * @Author: Innei\n * @Date: 2020-06-11 13:01:08\n * @LastEditTime: 2020-06-12 20:19:16\n * @LastEditors: Innei\n * @FilePath: /mx-web/common/markdown/rules/mentions.ts\n * @Coding with Love\n */\n\n/**\n * parse (@username) to github user profile\n */\n// @ts-ignore\nfunction tokenizeMention(eat, value, silent) {\n  var match = /\\((@(\\w+\\b))\\)\\s(?!\\[.*?\\])/.exec(value);\n\n  if (match) {\n    if (silent) {\n      return true;\n    }\n\n    try {\n      return eat(match[0])({\n        type: 'link',\n        url: 'https://github.com/' + match[2],\n        children: [{\n          type: 'text',\n          value: match[1]\n        }]\n      }); // eslint-disable-next-line no-empty\n    } catch (_unused) {}\n  }\n}\n\ntokenizeMention.notInLink = true;\ntokenizeMention.locator = locateMention;\n\nfunction locateMention(value, fromIndex) {\n  return value.indexOf('@', fromIndex);\n}\n\nfunction mentions() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods; // Add an inline tokenizer (defined in the following example).\n\n  tokenizers.mention = tokenizeMention; // Run it just before `text`.\n\n  methods.splice(methods.indexOf('text'), 0, 'mention');\n}\n\nexport { mentions };","map":null,"metadata":{},"sourceType":"module"}