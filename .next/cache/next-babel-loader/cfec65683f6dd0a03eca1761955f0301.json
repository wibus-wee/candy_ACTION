{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { QueueAnim } from 'components/Anime';\nimport { SEO } from 'components/SEO';\nimport { ArticleLayout } from 'layouts/ArticleLayout';\nimport Link from 'next/link';\nimport React from 'react';\nimport styles from './index.module.scss';\nvar ArticleType;\n\n(function (ArticleType) {\n  ArticleType[ArticleType[\"Post\"] = 0] = \"Post\";\n  ArticleType[ArticleType[\"Note\"] = 1] = \"Note\";\n})(ArticleType || (ArticleType = {}));\n\nvar TimeLineView = function TimeLineView(props) {\n  var sortedMap = new Map();\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts,\n      _props$notes = props.notes,\n      notes = _props$notes === void 0 ? [] : _props$notes;\n\n  var getDelayTime = function getDelayTime(year) {\n    var _sortedMap$get;\n\n    var prevYear = year + 1;\n    var itemsLength = (_sortedMap$get = sortedMap.get(prevYear)) === null || _sortedMap$get === void 0 ? void 0 : _sortedMap$get.length;\n\n    if (itemsLength) {\n      return itemsLength * 100 + getDelayTime(prevYear);\n    } else {\n      return 0;\n    }\n  };\n\n  posts\n  /* .reverse() */\n  .forEach(function (post) {\n    var date = new Date(post.created);\n    var year = date.getFullYear();\n    var data = {\n      title: post.title,\n      meta: ['博文'],\n      date: date,\n      as: \"/posts/\".concat(post.slug),\n      href: \"/posts/[slug]\",\n      type: ArticleType.Post,\n      id: post._id\n    };\n    sortedMap.set(year, sortedMap.get(year) ? sortedMap.get(year).concat(data) : [data]);\n  });\n  notes\n  /* .reverse() */\n  .forEach(function (note) {\n    var date = new Date(note.created);\n    var year = date.getFullYear();\n    var data = {\n      title: note.title,\n      meta: ['这天的心情: ' + (note.mood || '一般'), '随记'].filter(function (_) {\n        return _;\n      }),\n      date: date,\n      as: \"/notes/\".concat(note.nid),\n      href: '/notes/[id]',\n      type: ArticleType.Note,\n      id: note._id\n    };\n    sortedMap.set(year, sortedMap.get(year) ? sortedMap.get(year).concat(data) : [data]);\n  });\n  sortedMap.forEach(function (val, key) {\n    sortedMap.set(key, val.sort(function (a, b) {\n      return b.date.getTime() - a.date.getTime();\n    }));\n  });\n  return __jsx(ArticleLayout, {\n    title: '时间线',\n    subtitle: \"\\u5171\\u6709\".concat(posts.length + notes.length, \"\\u7BC7\\u6587\\u7AE0, \\u518D\\u63A5\\u518D\\u5389\")\n  }, __jsx(SEO, {\n    title: '时间线'\n  }), Array.from(sortedMap).map(function (_ref, j) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        year = _ref2[0],\n        value = _ref2[1];\n\n    return __jsx(\"article\", {\n      className: \"post-content paul-note article-list\",\n      key: year\n    }, __jsx(\"div\", {\n      className: \"note-item\"\n    }, __jsx(QueueAnim, {\n      delay: getDelayTime(year),\n      type: 'bottom'\n    }, __jsx(\"h1\", {\n      key: 1\n    }, year)), __jsx(\"ul\", {\n      className: styles['timeline-wrap']\n    }, value.map(function (item, i) {\n      return __jsx(QueueAnim, {\n        type: 'bottom',\n        key: item.id,\n        delay: getDelayTime(year) + i * 100\n      }, __jsx(\"li\", {\n        key: i * j\n      }, __jsx(Link, {\n        href: item.href,\n        as: item.as\n      }, __jsx(\"a\", null, __jsx(\"span\", {\n        className: 'date'\n      }, (item.date.getMonth() + 1).toString().padStart(2, '0'), \"/\", item.date.getDate().toString().padStart(2, '0')), __jsx(\"span\", {\n        className: 'title'\n      }, item.title))), __jsx(\"span\", {\n        className: 'meta'\n      }, item.meta.map(function (m, i) {\n        return i === 0 ? m : '/' + m;\n      }))));\n    }))));\n  }));\n};\n\nexport var __N_SSG = true;\nexport default TimeLineView;","map":null,"metadata":{},"sourceType":"module"}