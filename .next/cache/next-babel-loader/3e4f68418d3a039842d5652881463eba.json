{"ast":null,"code":"var __jsx = React.createElement;\nimport { QueueAnim } from 'components/Anime';\nimport { SEO } from 'components/SEO';\nimport { Core } from 'core';\nimport { ArticleLayout } from 'layouts/ArticleLayout';\nimport Link from 'next/link';\nimport React from 'react';\nimport styles from './index.module.scss';\nvar ArticleType;\n\n(function (ArticleType) {\n  ArticleType[ArticleType[\"Post\"] = 0] = \"Post\";\n  ArticleType[ArticleType[\"Note\"] = 1] = \"Note\";\n})(ArticleType || (ArticleType = {}));\n\nconst TimeLineView = props => {\n  const sortedMap = new Map();\n  const {\n    posts = [],\n    notes = []\n  } = props;\n\n  const getDelayTime = year => {\n    var _sortedMap$get;\n\n    const prevYear = year + 1;\n    const itemsLength = (_sortedMap$get = sortedMap.get(prevYear)) === null || _sortedMap$get === void 0 ? void 0 : _sortedMap$get.length;\n\n    if (itemsLength) {\n      return itemsLength * 100 + getDelayTime(prevYear);\n    } else {\n      return 0;\n    }\n  };\n\n  posts\n  /* .reverse() */\n  .forEach(post => {\n    const date = new Date(post.created);\n    const year = date.getFullYear();\n    const data = {\n      title: post.title,\n      meta: ['博文'],\n      date: date,\n      as: `/posts/${post.slug}`,\n      href: `/posts/[slug]`,\n      type: ArticleType.Post,\n      id: post._id\n    };\n    sortedMap.set(year, sortedMap.get(year) ? sortedMap.get(year).concat(data) : [data]);\n  });\n  notes\n  /* .reverse() */\n  .forEach(note => {\n    const date = new Date(note.created);\n    const year = date.getFullYear();\n    const data = {\n      title: note.title,\n      meta: ['这天的心情: ' + (note.mood || '一般'), '随记'].filter(_ => _),\n      date,\n      as: `/notes/${note.nid}`,\n      href: '/notes/[id]',\n      type: ArticleType.Note,\n      id: note._id\n    };\n    sortedMap.set(year, sortedMap.get(year) ? sortedMap.get(year).concat(data) : [data]);\n  });\n  sortedMap.forEach((val, key) => {\n    sortedMap.set(key, val.sort((a, b) => b.date.getTime() - a.date.getTime()));\n  });\n  return __jsx(ArticleLayout, {\n    title: '时间线',\n    subtitle: `共有${posts.length + notes.length}篇文章, 再接再厉`\n  }, __jsx(SEO, {\n    title: '时间线'\n  }), Array.from(sortedMap).map(([year, value], j) => {\n    return __jsx(\"article\", {\n      className: \"post-content paul-note article-list\",\n      key: year\n    }, __jsx(\"div\", {\n      className: \"note-item\"\n    }, __jsx(QueueAnim, {\n      delay: getDelayTime(year),\n      type: 'bottom'\n    }, __jsx(\"h1\", {\n      key: 1\n    }, year)), __jsx(\"ul\", {\n      className: styles['timeline-wrap']\n    }, value.map((item, i) => {\n      return __jsx(QueueAnim, {\n        type: 'bottom',\n        key: item.id,\n        delay: getDelayTime(year) + i * 100\n      }, __jsx(\"li\", {\n        key: i * j\n      }, __jsx(Link, {\n        href: item.href,\n        as: item.as\n      }, __jsx(\"a\", null, __jsx(\"span\", {\n        className: 'date'\n      }, (item.date.getMonth() + 1).toString().padStart(2, '0'), \"/\", item.date.getDate().toString().padStart(2, '0')), __jsx(\"span\", {\n        className: 'title'\n      }, item.title))), __jsx(\"span\", {\n        className: 'meta'\n      }, item.meta.map((m, i) => i === 0 ? m : '/' + m))));\n    }))));\n  }));\n};\n\nexport const getStaticProps = async () => {\n  const {\n    articles,\n    notes\n  } = Core.fetcher;\n  const props = {\n    notes: notes.map((n, i) => ({\n      _id: i,\n      created: n.created,\n      nid: n.nid,\n      title: n.title,\n      mood: n.mood || '',\n      weather: n.weather || ''\n    })),\n    posts: articles.map((n, i) => ({\n      _id: i,\n      created: n.created,\n      slug: n.slug,\n      summary: '',\n      title: n.title\n    }))\n  };\n  return {\n    props\n  };\n};\nexport default TimeLineView;","map":null,"metadata":{},"sourceType":"module"}