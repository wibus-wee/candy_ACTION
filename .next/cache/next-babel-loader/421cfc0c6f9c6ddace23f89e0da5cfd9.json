{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\n/*\n * @Author: Innei\n * @Date: 2020-08-07 16:56:07\n * @LastEditTime: 2020-09-05 10:56:21\n * @LastEditors: Innei\n * @FilePath: /candy/common/store/action.ts\n * @Coding with Love\n */\nimport { observable, action, computed } from 'mobx';\nvar ActionStore = (_class = (_temp = /*#__PURE__*/function () {\n  function ActionStore() {\n    _classCallCheck(this, ActionStore);\n\n    _initializerDefineProperty(this, \"_actions\", _descriptor, this);\n  }\n\n  _createClass(ActionStore, [{\n    key: \"resetActions\",\n    value: function resetActions() {\n      this._actions = [];\n    }\n    /**\n     * clear and set actions (replace)\n     * @param actions\n     */\n\n  }, {\n    key: \"setActions\",\n    value: function setActions(actions) {\n      var _this$_actions;\n\n      this.resetActions();\n\n      (_this$_actions = this._actions).push.apply(_this$_actions, _toConsumableArray(actions));\n    }\n  }, {\n    key: \"appendActions\",\n    value: function appendActions(actions) {\n      if (Array.isArray(actions)) {\n        var _this$_actions2;\n\n        (_this$_actions2 = this._actions).push.apply(_this$_actions2, _toConsumableArray(actions));\n      } else {\n        this._actions.push(actions);\n      }\n    }\n  }, {\n    key: \"removeAction\",\n    value: function removeAction(action) {\n      var index = this._actions.indexOf(action);\n\n      if (index !== -1) {\n        this._actions.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"removeActionByIndex\",\n    value: function removeActionByIndex(index) {\n      this._actions.splice(index, 1);\n    }\n  }, {\n    key: \"removeActionByUUID\",\n    value: function removeActionByUUID(id) {\n      var index = this._actions.findIndex(function (i) {\n        return id.equal(i.id);\n      });\n\n      this.removeActionByIndex(index);\n    }\n  }, {\n    key: \"actions\",\n    get: function get() {\n      return _toConsumableArray(this._actions);\n    }\n  }]);\n\n  return ActionStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_actions\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"resetActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"resetActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"appendActions\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"appendActions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeAction\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeAction\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeActionByIndex\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeActionByIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeActionByUUID\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeActionByUUID\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"actions\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"actions\"), _class.prototype)), _class);\nexport { ActionStore as default };","map":null,"metadata":{},"sourceType":"module"}